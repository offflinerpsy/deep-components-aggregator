# .github/workflows/ci.yml - CI-–≥–µ–π—Ç —Å RU-–æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ E2E —Ç–µ—Å—Ç–∞–º–∏
name: CI Gate - RU Content Orchestrator

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  code-quality:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        cd deep-components-aggregator
        npm ci
      
    - name: Security audit
      run: npm audit --audit-level=moderate
      continue-on-error: true # –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º CI –∏–∑-–∑–∞ –Ω–∏–∑–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π
      
    - name: Check package vulnerabilities
      run: |
        echo "::group::NPM Audit Report"
        npm audit --json > audit-report.json || true
        cat audit-report.json
        echo "::endgroup::"
        
    - name: Upload audit report
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-report
        path: audit-report.json
        retention-days: 30

  # E2E —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å Playwright
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: code-quality
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium] # –ü–æ–∫–∞ —Ç–æ–ª—å–∫–æ Chromium –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        cd deep-components-aggregator
        npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
      
    - name: Create required directories
      run: |
        cd deep-components-aggregator
        mkdir -p data public/ui reports/sources
        
    - name: Setup test data
      run: |
        cd deep-components-aggregator
        # –°–æ–∑–¥–∞—ë–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        if [ ! -f "data/seed-index.json" ]; then
          echo '[]' > data/seed-index.json
        fi
        
        # –°–æ–∑–¥–∞—ë–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if [ ! -f "public/ui/placeholder.svg" ]; then
          echo '<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100"><rect width="100%" height="100%" fill="#f3f4f6"/><text x="50%" y="50%" text-anchor="middle" dy=".3em" fill="#9ca3af">IMG</text></svg>' > public/ui/placeholder.svg
        fi
        
    - name: Start server in background
      run: |
        cd deep-components-aggregator
        npm start &
        echo $! > server.pid
        # –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
        timeout 30 bash -c 'until curl -f http://127.0.0.1:9201/_version; do sleep 1; done'
      env:
        NODE_ENV: test
        PORT: 9201
        
    - name: Run E2E tests
      run: |
        cd deep-components-aggregator
        npx playwright test --project=${{ matrix.browser }} --reporter=list,json --output-dir=test-results-${{ matrix.browser }}
      env:
        PLAYWRIGHT_JSON_OUTPUT_NAME: results-${{ matrix.browser }}.json
        
    - name: Stop server
      if: always()
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
          rm server.pid
        fi
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-results-${{ matrix.browser }}
        path: |
          deep-components-aggregator/test-results-${{ matrix.browser }}/
          deep-components-aggregator/results-${{ matrix.browser }}.json
          deep-components-aggregator/playwright-report/
        retention-days: 30
        
    - name: Upload trace files
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-traces-${{ matrix.browser }}
        path: deep-components-aggregator/test-results-${{ matrix.browser }}/**/*.zip
        retention-days: 30
        
    - name: Upload source HTML files
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: scraped-sources-${{ matrix.browser }}
        path: deep-components-aggregator/reports/sources/
        retention-days: 7

  # Smoke test —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ MPN
  smoke-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: code-quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        cd deep-components-aggregator
        npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
      
    - name: Create required directories
      run: |
        cd deep-components-aggregator
        mkdir -p data public/ui reports/sources
        echo '[]' > data/seed-index.json || true
        echo '<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100"><rect width="100%" height="100%" fill="#f3f4f6"/></svg>' > public/ui/placeholder.svg || true
        
    - name: Start server
      run: |
        cd deep-components-aggregator
        npm start &
        echo $! > server.pid
        timeout 30 bash -c 'until curl -f http://127.0.0.1:9201/_version; do sleep 1; done'
      env:
        NODE_ENV: test
        PORT: 9201
        
    - name: Run Smoke-20 test
      run: |
        cd deep-components-aggregator
        npx playwright test tests/e2e/smoke-20.spec.ts --reporter=list,json
      env:
        PLAYWRIGHT_JSON_OUTPUT_NAME: smoke-20-results.json
        
    - name: Stop server
      if: always()
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
        fi
        
    - name: Upload smoke test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: smoke-20-results
        path: |
          deep-components-aggregator/smoke-20-results.json
          deep-components-aggregator/test-results/
        retention-days: 30

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ API
  api-health:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: code-quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        cd deep-components-aggregator
        npm ci
      
    - name: Create required directories
      run: |
        cd deep-components-aggregator
        mkdir -p data public/ui reports/sources
        echo '[]' > data/seed-index.json || true
        
    - name: Start server
      run: |
        cd deep-components-aggregator
        npm start &
        echo $! > server.pid
        timeout 30 bash -c 'until curl -f http://127.0.0.1:9201/_version; do sleep 1; done'
      env:
        NODE_ENV: test
        PORT: 9201
        
    - name: Health check API endpoints
      run: |
        echo "::group::Version endpoint"
        curl -f http://127.0.0.1:9201/_version | jq .
        echo "::endgroup::"
        
        echo "::group::Search API"
        curl -f "http://127.0.0.1:9201/api/search?q=LM317T" | jq '.count'
        echo "::endgroup::"
        
        echo "::group::Product API"  
        curl -f "http://127.0.0.1:9201/api/product?mpn=LM317T" | jq '.product.mpn'
        echo "::endgroup::"
        
    - name: Stop server
      if: always()
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
        fi

  # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏
  ci-gate:
    runs-on: ubuntu-latest
    needs: [code-quality, e2e-tests, smoke-test, api-health]
    if: always()
    
    steps:
    - name: Check all jobs status
      run: |
        if [[ "${{ needs.code-quality.result }}" != "success" ]]; then
          echo "‚ùå Code quality check failed"
          exit 1
        fi
        
        if [[ "${{ needs.e2e-tests.result }}" != "success" ]]; then
          echo "‚ùå E2E tests failed"
          exit 1
        fi
        
        if [[ "${{ needs.smoke-test.result }}" != "success" ]]; then
          echo "‚ùå Smoke tests failed"  
          exit 1
        fi
        
        if [[ "${{ needs.api-health.result }}" != "success" ]]; then
          echo "‚ùå API health check failed"
          exit 1
        fi
        
        echo "‚úÖ All CI checks passed! Ready to merge."
        
    - name: Create CI summary
      run: |
        echo "## üéØ CI Gate Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Code Quality | ${{ needs.code-quality.result == 'success' && '‚úÖ Pass' || '‚ùå Fail' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| E2E Tests | ${{ needs.e2e-tests.result == 'success' && '‚úÖ Pass' || '‚ùå Fail' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Smoke Test | ${{ needs.smoke-test.result == 'success' && '‚úÖ Pass' || '‚ùå Fail' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| API Health | ${{ needs.api-health.result == 'success' && '‚úÖ Pass' || '‚ùå Fail' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "üöÄ **RU Content Orchestrator** is ready for production!" >> $GITHUB_STEP_SUMMARY