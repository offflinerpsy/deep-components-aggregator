#!/usr/bin/env python3
# browser_verification_test.py - –ü–æ–ª–Ω–∞—è –±—Ä–∞—É–∑–µ—Ä–Ω–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏
from playwright.sync_api import sync_playwright
import requests
import json
import time
from datetime import datetime
import os

def log(msg):
    timestamp = datetime.now().strftime("%H:%M:%S")
    print(f"[{timestamp}] {msg}")
    with open("browser_test.log", "a", encoding="utf-8") as f:
        f.write(f"[{timestamp}] {msg}\n")

def test_api_data():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–æ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    log("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API –¥–∞–Ω–Ω—ã–µ...")

    # –¢–µ—Å—Ç Search API
    try:
        response = requests.get("http://89.104.69.77/api/search?q=LM317T", timeout=10)
        if response.status_code == 200:
            data = response.json()
            if data.get("ok") and data.get("items") and len(data["items"]) > 0:
                item = data["items"][0]
                has_image = bool(item.get("image"))
                has_price = bool(item.get("price_min_rub"))
                has_region = bool(item.get("offers") and len(item["offers"]) > 0)

                log(f"‚úÖ Search API: image={has_image}, price={has_price}, region={has_region}")
                log(f"   –î–∞–Ω–Ω—ã–µ: {item.get('title')}, —Ü–µ–Ω–∞={item.get('price_min_rub')}‚ÇΩ")

                if has_image and has_price and has_region:
                    return True
                else:
                    log("‚ùå Search API: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ")
                    return False
            else:
                log("‚ùå Search API: –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")
                return False
        else:
            log(f"‚ùå Search API: HTTP {response.status_code}")
            return False
    except Exception as e:
        log(f"‚ùå Search API –æ—à–∏–±–∫–∞: {e}")
        return False

def test_product_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º Product API"""
    log("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º Product API...")

    try:
        response = requests.get("http://89.104.69.77/api/product?mpn=LM317T", timeout=10)
        if response.status_code == 200:
            data = response.json()
            if data.get("ok") and data.get("product"):
                product = data["product"]
                has_gallery = bool(product.get("gallery") and len(product["gallery"]) > 0)
                has_specs = bool(product.get("specs") and len(product["specs"]) > 0)
                has_order = bool(product.get("order"))

                log(f"‚úÖ Product API: gallery={has_gallery}, specs={has_specs}, order={has_order}")
                log(f"   –î–∞–Ω–Ω—ã–µ: {product.get('title')}, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π={len(product.get('gallery', []))}")

                if has_gallery and has_specs and has_order:
                    return True
                else:
                    log("‚ùå Product API: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ")
                    return False
            else:
                log("‚ùå Product API: –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")
                return False
        else:
            log(f"‚ùå Product API: HTTP {response.status_code}")
            return False
    except Exception as e:
        log(f"‚ùå Product API –æ—à–∏–±–∫–∞: {e}")
        return False

def browser_full_test():
    """–ü–æ–ª–Ω–æ–µ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏"""
    log("üåê –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω–æ–µ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")

    with sync_playwright() as p:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        browser = p.chromium.launch(headless=True)
        page = browser.new_page(viewport={"width": 1366, "height": 768})

        try:
            # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
            os.makedirs("screenshots", exist_ok=True)

            # 1. –¢–ï–°–¢ –ì–õ–ê–í–ù–û–ô –°–¢–†–ê–ù–ò–¶–´
            log("üìÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
            page.goto("http://89.104.69.77/", wait_until="networkidle", timeout=30000)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
            title = page.title()
            log(f"   –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")

            # –°–∫—Ä–∏–Ω—à–æ—Ç –≥–ª–∞–≤–Ω–æ–π
            page.screenshot(path="screenshots/01_homepage.png", full_page=True)
            log("‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω")

            # 2. –¢–ï–°–¢ –ü–û–ò–°–ö–ê
            log("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫...")

            # –ò—â–µ–º —Ñ–æ—Ä–º—É –ø–æ–∏—Å–∫–∞
            search_input = page.locator("input[type='text'], input[name*='search'], input[placeholder*='–ø–æ–∏—Å–∫'], #search-input")
            search_button = page.locator("button[type='submit'], button:has-text('–ü–æ–∏—Å–∫'), .search-btn, #search-btn")

            if search_input.count() > 0:
                log("   –ù–∞–π–¥–µ–Ω–∞ —Ñ–æ—Ä–º–∞ –ø–æ–∏—Å–∫–∞")
                search_input.first.fill("LM317T")
                page.screenshot(path="screenshots/02_search_filled.png", full_page=True)

                # –ù–∞–∂–∏–º–∞–µ–º –ø–æ–∏—Å–∫
                if search_button.count() > 0:
                    search_button.first.click()
                else:
                    # –ü—Ä–æ–±—É–µ–º Enter
                    search_input.first.press("Enter")

                # –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                page.wait_for_timeout(3000)
                page.screenshot(path="screenshots/03_search_results.png", full_page=True)
                log("‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                results = page.locator(".search-result, .item, .product-item, tr, .result-row")
                if results.count() > 0:
                    log(f"   –ù–∞–π–¥–µ–Ω–æ {results.count()} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                    images = page.locator("img[src*='placeholder'], img[src*='http']")
                    log(f"   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {images.count()}")

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ü–µ–Ω
                    prices = page.locator(":text-matches('‚ÇΩ|—Ä—É–±|RUB|[0-9]+)', 'i')")
                    log(f"   –¶–µ–Ω: {prices.count()}")

                    # 3. –¢–ï–°–¢ –ö–ê–†–¢–û–ß–ö–ò –¢–û–í–ê–†–ê
                    log("üì¶ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–∞...")

                    # –ò—â–µ–º –ø–µ—Ä–≤—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä
                    product_links = page.locator("a[href*='product'], a[href*='#/product'], .product-link, .item-title a")
                    if product_links.count() > 0:
                        product_links.first.click()
                        page.wait_for_timeout(3000)
                        page.screenshot(path="screenshots/04_product_card.png", full_page=True)
                        log("‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")

                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∫–∞—Ä—Ç–æ—á–∫–∏
                        gallery = page.locator("img, .gallery, .product-image")
                        specs = page.locator(".specs, .specifications, .params, table")
                        order_btn = page.locator("button:has-text('–ö—É–ø–∏—Ç—å'), .buy-btn, .order-btn")

                        log(f"   –ì–∞–ª–µ—Ä–µ—è: {gallery.count()} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                        log(f"   –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏: {specs.count()} –±–ª–æ–∫–æ–≤")
                        log(f"   –ö–Ω–æ–ø–∫–∞ –∑–∞–∫–∞–∑–∞: {order_btn.count()}")

                        if gallery.count() > 0 and specs.count() > 0:
                            log("‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã")
                            return True
                        else:
                            log("‚ùå –ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–µ–ø–æ–ª–Ω–∞—è")
                            return False
                    else:
                        log("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä—ã")
                        return False
                else:
                    log("‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                    return False
            else:
                log("‚ùå –§–æ—Ä–º–∞ –ø–æ–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

                # –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–∏—Å–∫—É
                log("   –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–∏—Å–∫—É...")
                page.goto("http://89.104.69.77/ui/search.html?q=LM317T", wait_until="networkidle")
                page.wait_for_timeout(3000)
                page.screenshot(path="screenshots/03_direct_search.png", full_page=True)
                log("‚úÖ –ü—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–∏—Å–∫—É - —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                results = page.locator("tr, .item, .result")
                if results.count() > 0:
                    log(f"   –ù–∞–π–¥–µ–Ω–æ {results.count()} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥")

                    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–∞ –Ω–∞–ø—Ä—è–º—É—é
                    log("üì¶ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–∞ –Ω–∞–ø—Ä—è–º—É—é...")
                    page.goto("http://89.104.69.77/ui/product.html?mpn=LM317T", wait_until="networkidle")
                    page.wait_for_timeout(3000)
                    page.screenshot(path="screenshots/04_direct_product.png", full_page=True)
                    log("‚úÖ –ü—Ä—è–º–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞ - —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω")

                    return True
                else:
                    log("‚ùå –î–∞–∂–µ –ø—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
                    return False

        except Exception as e:
            log(f"‚ùå –ë—Ä–∞—É–∑–µ—Ä–Ω—ã–π —Ç–µ—Å—Ç –Ω–µ —É–¥–∞–ª—Å—è: {e}")
            page.screenshot(path="screenshots/error.png", full_page=True)
            return False
        finally:
            browser.close()

def main():
    log("üöÄ –ü–û–õ–ù–ê–Ø –í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–û–°–¢–ò")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    api_search_ok = test_api_data()
    api_product_ok = test_product_api()

    if not (api_search_ok and api_product_ok):
        log("‚ùå API —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏, –±—Ä–∞—É–∑–µ—Ä–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å")
        return False

    # –ë—Ä–∞—É–∑–µ—Ä–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    browser_ok = browser_full_test()

    if browser_ok:
        log("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        log("üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ screenshots/")
        log("üåê –°–∞–π—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω:")
        log("   - http://89.104.69.77/ (–≥–ª–∞–≤–Ω–∞—è)")
        log("   - http://89.104.69.77/ui/search.html?q=LM317T (–ø–æ–∏—Å–∫)")
        log("   - http://89.104.69.77/ui/product.html?mpn=LM317T (—Ç–æ–≤–∞—Ä)")
        return True
    else:
        log("‚ùå –ë–†–ê–£–ó–ï–†–ù–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò")
        return False

if __name__ == "__main__":
    success = main()
    exit(0 if success else 1)
