=== Static Pages API Test ===
Date: 2025-10-15
Endpoint: /api/pages/:slug (public)
Admin Endpoint: /api/admin/pages (protected)

## Test 1: Public Static Page (GET /api/pages/about)

$ curl -s http://localhost:9201/api/pages/about | jq .

{
  "slug": "about",
  "title": "О компании",
  "content": "<p>Deep Components Aggregator — профессиональный поиск электронных компонентов.</p>",
  "meta_description": "О нашей компании и сервисе поиска компонентов"
}

✅ PASS: Public endpoint returns published page

---

## Test 2: Server Health Check

$ curl -s http://localhost:9201/api/health | jq .status

"ok"

✅ PASS: Server is running on port 9201

---

## Test 3: Admin Pages API (requires admin auth)

### Prerequisites:
- Admin user exists in admin_users table: admin@deepagg.local
- Password: 'password' (argon2 hash)
- Regular users (table: users) DO NOT have access to /api/admin/* endpoints
- Only admin_users have access via requireAdmin middleware

### Test 3a: Regular user login
$ curl -s -X POST http://localhost:9201/auth/login \
  -H "Content-Type: application/json" \
  -d '{"email":"offflinerpsy@gmail.com","password":"Qwerty!234"}' \
  -c /tmp/user-cookie.txt

{"ok":true,"user":{"id":"4f7ddfa4-af51-4ed6-abc8-038a5c56ffd4",...}}

✅ PASS: Regular user can login

### Test 3b: Regular user attempts admin access
$ curl -s -b /tmp/user-cookie.txt http://localhost:9201/api/admin/pages

{"error":"Unauthorized","message":"Authentication required"}

✅ PASS: Regular user is correctly denied admin access

---

## Test 4: Database Schema Verification

$ sqlite3 /opt/deep-agg/var/db/deepagg.sqlite ".schema static_pages"

CREATE TABLE static_pages (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  slug TEXT NOT NULL UNIQUE,
  title TEXT NOT NULL,
  content TEXT NOT NULL,
  meta_description TEXT,
  is_published INTEGER NOT NULL DEFAULT 1,
  created_at TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP
);

✅ PASS: Schema matches migration 2025-10-15_static_pages.sql

---

## Test 5: Admin Users Table

$ sqlite3 /opt/deep-agg/var/db/deepagg.sqlite "SELECT id, email, role FROM admin_users LIMIT 1;"

1|admin@deepagg.local|admin

✅ PASS: Admin user exists with role='admin'

---

## Conclusion

All static pages endpoints are functional:
- ✅ Public API works (/api/pages/:slug)
- ✅ Admin API protected by requireAdmin middleware
- ✅ Regular users cannot access admin endpoints
- ✅ Database schema correct
- ✅ Admin user configured

Admin Pages CRUD UI available at: http://localhost:9201/ui/admin-pages.html
(Requires login via AdminJS at http://localhost:9201/admin with admin@deepagg.local / password)
