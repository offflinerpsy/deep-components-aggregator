import { createServer } from 'http';
import { readFileSync, existsSync, writeFileSync } from 'fs';
import { join, dirname } from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const PORT = 9201;

// –ü—Ä–æ—Å—Ç–æ–π –∫—ç—à –≤ –ø–∞–º—è—Ç–∏
const cache = new Map();

// –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞ (–∏–º–∏—Ç–∞—Ü–∏—è ChipDip + OEMsTrade)
const mockSearchResults = [
  {
    mpn: "LM317T",
    title: "LM317T, –°—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è +1.2...37–í 1.5A [TO-220]",
    manufacturer: "Texas Instruments",
    description: "–†–µ–≥—É–ª–∏—Ä—É–µ–º—ã–π —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è. –®–∏—Ä–æ–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö –ø–∏—Ç–∞–Ω–∏—è, –∑–∞—Ä—è–¥–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö, —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä–∞—Ö –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è.",
    package: "TO-220",
    packaging: "–¢—É–±–∞",
    regions: ["EU", "US", "ASIA"],
    stock_total: 150,
    price_min: 25.50,
    price_min_currency: "USD",
    price_min_rub: 2142,
    image: "https://static.chipdip.ru/lib/413/DOC005413067.jpg",
    product_url: "https://www.chipdip.ru/product/lm317t-stabilizator-napryazheniya-1.2-37v-1.5a-hgsemi-9001130283",
    source: "chipdip"
  },
  {
    mpn: "1N4148W-TP",
    title: "1N4148W-TP, –î–∏–æ–¥ –±—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∫–ª—é—á–∞—é—â–∏–π 100V 200mA [SOD-123]",
    manufacturer: "Vishay",
    description: "–ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∫–ª—é—á–∞—é—â–∏–π –¥–∏–æ–¥ –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è. –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è, –Ω–∏–∑–∫–æ–µ –ø—Ä—è–º–æ–µ –ø–∞–¥–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è.",
    package: "SOD-123",
    packaging: "–õ–µ–Ω—Ç–∞",
    regions: ["EU", "ASIA"],
    stock_total: 5000,
    price_min: 0.15,
    price_min_currency: "USD",
    price_min_rub: 13,
    image: "https://static.chipdip.ru/lib/123/DOC001123456.jpg",
    product_url: "https://www.chipdip.ru/product/1n4148w-tp-diod-bystryy-pereklyuchayushchiy-100v-200ma-vishay-9001234567",
    source: "chipdip"
  },
  {
    mpn: "BC547B",
    title: "BC547B, –¢—Ä–∞–Ω–∑–∏—Å—Ç–æ—Ä –±–∏–ø–æ–ª—è—Ä–Ω—ã–π NPN 45V 100mA [TO-92]",
    manufacturer: "ON Semiconductor",
    description: "–ë–∏–ø–æ–ª—è—Ä–Ω—ã–π NPN —Ç—Ä–∞–Ω–∑–∏—Å—Ç–æ—Ä –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è. –í—ã—Å–æ–∫–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É—Å–∏–ª–µ–Ω–∏—è, –Ω–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —à—É–º–∞.",
    package: "TO-92",
    packaging: "–¢—É–±–∞",
    regions: ["EU", "US", "ASIA"],
    stock_total: 2500,
    price_min: 0.08,
    price_min_currency: "USD",
    price_min_rub: 7,
    image: "https://static.chipdip.ru/lib/789/DOC001789012.jpg",
    product_url: "https://www.chipdip.ru/product/bc547b-tranzistor-bipolyarnyy-npn-45v-100ma-on-semiconductor-9007890123",
    source: "promelec"
  },
  {
    mpn: "NE555P",
    title: "NE555P, –¢–∞–π–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω—ã–π 8-DIP",
    manufacturer: "Texas Instruments",
    description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä. –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–º–ø—É–ª—å—Å–æ–≤, –º–æ–Ω–æ—Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –∏ –±–∏—Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö —Å—Ö–µ–º.",
    package: "DIP-8",
    packaging: "–¢—É–±–∞",
    regions: ["EU", "US"],
    stock_total: 800,
    price_min: 0.25,
    price_min_currency: "USD",
    price_min_rub: 21,
    image: "https://static.chipdip.ru/lib/555/DOC001555789.jpg",
    product_url: "https://www.chipdip.ru/product/ne555p-taymer-integralnyy-8-dip-texas-instruments-9005557890",
    source: "elitan"
  },
  {
    mpn: "TL071CP",
    title: "TL071CP, –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —É—Å–∏–ª–∏—Ç–µ–ª—å 8-DIP",
    manufacturer: "Texas Instruments",
    description: "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —É—Å–∏–ª–∏—Ç–µ–ª—å —Å –ø–æ–ª–µ–≤—ã–º–∏ —Ç—Ä–∞–Ω–∑–∏—Å—Ç–æ—Ä–∞–º–∏ –Ω–∞ –≤—Ö–æ–¥–µ. –í—ã—Å–æ–∫–æ–µ –≤—Ö–æ–¥–Ω–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ, –Ω–∏–∑–∫–∏–π –≤—Ö–æ–¥–Ω–æ–π —Ç–æ–∫.",
    package: "DIP-8",
    packaging: "–¢—É–±–∞",
    regions: ["EU", "US", "ASIA"],
    stock_total: 1200,
    price_min: 0.45,
    price_min_currency: "USD",
    price_min_rub: 38,
    image: "https://static.chipdip.ru/lib/071/DOC001071234.jpg",
    product_url: "https://www.chipdip.ru/product/tl071cp-operatsionnyy-usilitel-8-dip-texas-instruments-9000712345",
    source: "electronshik"
  }
];

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Å —É–º–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
function smartSearch(query) {
  const lowerQuery = query.toLowerCase();
  
  return mockSearchResults.filter(item => {
    // –ü–æ–∏—Å–∫ –ø–æ MPN
    if (item.mpn.toLowerCase().includes(lowerQuery)) return true;
    
    // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    if (item.title.toLowerCase().includes(lowerQuery)) return true;
    
    // –ü–æ–∏—Å–∫ –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—é
    if (item.manufacturer.toLowerCase().includes(lowerQuery)) return true;
    
    // –ü–æ–∏—Å–∫ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
    if (item.description.toLowerCase().includes(lowerQuery)) return true;
    
    // –ü–æ–∏—Å–∫ –ø–æ —Ä—É—Å—Å–∫–∏–º –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    const russianKeywords = {
      '—Ç—Ä–∞–Ω–∑–∏—Å—Ç–æ—Ä': ['transistor', 'bjt', 'mosfet', '–ø–æ–ª–µ–≤–∏–∫', '–±–∏–ø–æ–ª—è—Ä–Ω—ã–π'],
      '–¥–∏–æ–¥': ['diode', '–≤—ã–ø—Ä—è–º–∏—Ç–µ–ª—å', 'rectifier'],
      '—Ä–µ–∑–∏—Å—Ç–æ—Ä': ['resistor', '—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ', 'resistance'],
      '–∫–æ–Ω–¥–µ–Ω—Å–∞—Ç–æ—Ä': ['capacitor', '–µ–º–∫–æ—Å—Ç—å', 'cap'],
      '–º–∏–∫—Ä–æ—Å—Ö–µ–º–∞': ['ic', '—á–∏–ø', 'chip', 'integrated', 'circuit'],
      '—Å—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä': ['regulator', 'ldo', 'vreg'],
      '—É—Å–∏–ª–∏—Ç–µ–ª—å': ['amplifier', 'opamp', 'op-amp']
    };
    
    for (const [ru, en] of Object.entries(russianKeywords)) {
      if (lowerQuery.includes(ru) || en.some(keyword => lowerQuery.includes(keyword))) {
        if (item.title.toLowerCase().includes(ru) || 
            item.description.toLowerCase().includes(ru) ||
            en.some(keyword => item.title.toLowerCase().includes(keyword)) ||
            en.some(keyword => item.description.toLowerCase().includes(keyword))) {
          return true;
        }
      }
    }
    
    return false;
  });
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–¥—É–∫—Ç–µ
function getProductDetails(mpn) {
  const product = mockSearchResults.find(item => item.mpn === mpn);
  if (!product) return null;
  
  return {
    success: true,
    product: {
      mpn: product.mpn,
      title: product.title,
      description: product.description,
      images: [product.image],
      datasheets: [
        `https://static.chipdip.ru/lib/docs/${product.mpn}_datasheet.pdf`,
        `https://static.chipdip.ru/lib/docs/${product.mpn}_manual.pdf`
      ],
      technical_specs: {
        "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å": product.manufacturer,
        "–ö–æ—Ä–ø—É—Å": product.package,
        "–£–ø–∞–∫–æ–≤–∫–∞": product.packaging,
        "–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ": product.mpn.includes('317') ? "1.2-37–í" : "5-45–í",
        "–¢–æ–∫": product.mpn.includes('317') ? "1.5A" : "100mA",
        "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞": "-40¬∞C –¥–æ +85¬∞C",
        "–í–µ—Å": "2.9–≥"
      },
      package: product.package,
      manufacturer: product.manufacturer,
      source: { 
        name: product.source, 
        url: product.product_url 
      },
      order: {
        stock: product.stock_total,
        min_price_rub: product.price_min_rub,
        regions: product.regions
      }
    },
    meta: {
      mpn: product.mpn,
      sourceUrl: product.product_url,
      processingTime: "50ms",
      mode: "live",
      timestamp: new Date().toISOString()
    }
  };
}

const server = createServer((req, res) => {
  const url = new URL(req.url, `http://${req.headers.host}`);
  
  // CORS headers
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
  res.setHeader('Content-Type', 'application/json');
  
  if (req.method === 'OPTIONS') {
    res.writeHead(200);
    res.end();
    return;
  }
  
  console.log(`${req.method} ${req.url}`);
  
  // API Search - –£–ú–ù–´–ô –ü–û–ò–°–ö
  if (url.pathname === '/api/search' && req.method === 'GET') {
    const query = url.searchParams.get('q');
    if (!query) {
      res.writeHead(400);
      res.end(JSON.stringify({ error: 'Query parameter q is required' }));
      return;
    }
    
    console.log(`üîç Smart search for: "${query}"`);
    const results = smartSearch(query);
    console.log(`üìä Found ${results.length} results`);
    
    res.writeHead(200);
    res.end(JSON.stringify(results));
    return;
  }
  
  // API Product - –î–ï–¢–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
  if (url.pathname.startsWith('/api/product/') && req.method === 'GET') {
    const mpn = url.pathname.split('/')[3];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    if (cache.has(mpn)) {
      console.log(`‚ö° Cache hit for ${mpn}`);
      res.writeHead(200);
      res.end(JSON.stringify(cache.get(mpn)));
      return;
    }
    
    console.log(`üöÄ Fetching product details for: ${mpn}`);
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø–∞—Ä—Å–∏–Ω–≥–∞
    setTimeout(() => {
      const productData = getProductDetails(mpn);
      
      if (!productData) {
        res.writeHead(404);
        res.end(JSON.stringify({ 
          success: false, 
          error: 'Product not found',
          mpn 
        }));
        return;
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
      cache.set(mpn, productData);
      console.log(`üíæ Cached product data for ${mpn}`);
      
      res.writeHead(200);
      res.end(JSON.stringify(productData));
    }, 800); // 800ms –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    
    return;
  }
  
  // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
  if (url.pathname === '/global.css' && req.method === 'GET') {
    const cssPath = join(__dirname, 'frontend', 'public', 'global.css');
    if (existsSync(cssPath)) {
      res.setHeader('Content-Type', 'text/css');
      res.writeHead(200);
      res.end(readFileSync(cssPath, 'utf8'));
      return;
    }
  }
  
  if (url.pathname === '/layout/header.html' && req.method === 'GET') {
    const headerPath = join(__dirname, 'frontend', 'public', 'layout', 'header.html');
    if (existsSync(headerPath)) {
      res.setHeader('Content-Type', 'text/html');
      res.writeHead(200);
      res.end(readFileSync(headerPath, 'utf8'));
      return;
    }
  }
  
  if (url.pathname === '/layout/footer.html' && req.method === 'GET') {
    const footerPath = join(__dirname, 'frontend', 'public', 'layout', 'footer.html');
    if (existsSync(footerPath)) {
      res.setHeader('Content-Type', 'text/html');
      res.writeHead(200);
      res.end(readFileSync(footerPath, 'utf8'));
      return;
    }
  }
  
  if (url.pathname === '/search.html' && req.method === 'GET') {
    const searchPath = join(__dirname, 'frontend', 'public', 'search.html');
    if (existsSync(searchPath)) {
      res.setHeader('Content-Type', 'text/html');
      res.writeHead(200);
      res.end(readFileSync(searchPath, 'utf8'));
      return;
    }
  }
  
  if (url.pathname === '/search.js' && req.method === 'GET') {
    const searchJsPath = join(__dirname, 'frontend', 'public', 'search.js');
    if (existsSync(searchJsPath)) {
      res.setHeader('Content-Type', 'application/javascript');
      res.writeHead(200);
      res.end(readFileSync(searchJsPath, 'utf8'));
      return;
    }
  }

  // –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
  if (url.pathname === '/' && req.method === 'GET') {
    const indexPath = join(__dirname, 'frontend', 'public', 'index.html');
    if (existsSync(indexPath)) {
      res.setHeader('Content-Type', 'text/html');
      res.writeHead(200);
      res.end(readFileSync(indexPath, 'utf8'));
      return;
    }
  }
  
  // 404
  res.writeHead(404);
  res.end(JSON.stringify({ error: 'Not found' }));
});

server.listen(PORT, () => {
  console.log(`üöÄ DEEP AGGREGATOR started on http://localhost:${PORT}`);
  console.log(`üì¶ Cache: ${cache.size} entries`);
  console.log(`üîç Smart Search API: /api/search?q=QUERY`);
  console.log(`üìÑ Product Details API: /api/product/MPN`);
  console.log(`üåê Frontend: http://localhost:${PORT}/`);
  console.log(`üìä Available products: ${mockSearchResults.length}`);
  console.log(`üéØ Try: http://localhost:${PORT}/?q=—Ç—Ä–∞–Ω–∑–∏—Å—Ç–æ—Ä`);
});

// Graceful shutdown
process.on('SIGINT', () => {
  console.log('\nüõë Shutting down DEEP AGGREGATOR...');
  server.close(() => {
    console.log('‚úÖ Server closed');
    process.exit(0);
  });
});
