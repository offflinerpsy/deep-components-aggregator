#!/usr/bin/env python3
# sync_all_versions.py - –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –≤–µ—Ä—Å–∏–π –ø—Ä–æ–µ–∫—Ç–∞
import paramiko
import subprocess
import os
from datetime import datetime

SERVER = "89.104.69.77"
USERNAME = "root"
PASSWORD = "DCIIcWfISxT3R4hT"

def log(msg):
    timestamp = datetime.now().strftime("%H:%M:%S")
    print(f"[{timestamp}] {msg}")

def run_local_command(command):
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True, cwd=".")
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def create_ssh_client():
    try:
        ssh_client = paramiko.SSHClient()
        ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh_client.connect(SERVER, username=USERNAME, password=PASSWORD, timeout=30)
        return ssh_client
    except Exception as e:
        log(f"‚ùå SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å: {e}")
        return None

def run_remote_command(ssh_client, command, timeout=120):
    try:
        stdin, stdout, stderr = ssh_client.exec_command(command, timeout=timeout)
        output = stdout.read().decode('utf-8', errors='ignore')
        error = stderr.read().decode('utf-8', errors='ignore')
        exit_code = stdout.channel.recv_exit_status()
        return exit_code == 0, output, error
    except Exception as e:
        log(f"‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: {e}")
        return False, "", str(e)

def main():
    log("üîÑ –ü–û–õ–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –í–°–ï–• –í–ï–†–°–ò–ô")

    # 1. –õ–û–ö–ê–õ–¨–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø
    log("üì• –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    success, output, error = run_local_command("git status")
    if success:
        log("‚úÖ Git —Å—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω")
        print(output)
    else:
        log(f"‚ùå –û—à–∏–±–∫–∞ git status: {error}")
        return

    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    success, output, error = run_local_command("git add .")
    if success:
        log("‚úÖ –§–∞–π–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ git")
    else:
        log(f"‚ùå –û—à–∏–±–∫–∞ git add: {error}")
        return

    # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    commit_msg = f"fix: –ø–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –≤–µ—Ä—Å–∏–π ({datetime.now().strftime('%Y-%m-%d %H:%M')})"
    success, output, error = run_local_command(f'git commit -m "{commit_msg}"')
    if success:
        log("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã")
    else:
        log(f"‚ö†Ô∏è –ö–æ–º–º–∏—Ç: {error}")  # –ú–æ–∂–µ—Ç –±—ã—Ç—å "nothing to commit"

    # –ü—É—à–∏–º –Ω–∞ GitHub
    success, output, error = run_local_command("git push origin main")
    if success:
        log("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ GitHub")
    else:
        log(f"‚ùå –û—à–∏–±–∫–∞ push: {error}")
        return

    # 2. –£–î–ê–õ–ï–ù–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø
    log("üì• –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä...")

    ssh_client = create_ssh_client()
    if not ssh_client:
        return

    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        success, output, error = run_remote_command(ssh_client, """
cd /opt/deep-agg
git fetch origin
git reset --hard origin/main
git clean -fd
git status
""")

        if success:
            log("‚úÖ –ö–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –æ–±–Ω–æ–≤–ª–µ–Ω")
            print(output)
        else:
            log(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {error}")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏–∏
        success, output, error = run_remote_command(ssh_client, "cd /opt/deep-agg && git rev-parse HEAD")
        if success:
            remote_commit = output.strip()
            log(f"‚úÖ –£–¥–∞–ª–µ–Ω–Ω—ã–π –∫–æ–º–º–∏—Ç: {remote_commit}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–æ–º–º–∏—Ç
            success, local_commit, error = run_local_command("git rev-parse HEAD")
            if success:
                local_commit = local_commit.strip()
                log(f"‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π –∫–æ–º–º–∏—Ç: {local_commit}")

                if local_commit == remote_commit:
                    log("‚úÖ –í–µ—Ä—Å–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")
                else:
                    log("‚ùå –í–µ—Ä—Å–∏–∏ —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è!")
            else:
                log(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–º–º–∏—Ç–∞: {error}")
        else:
            log(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–º–º–∏—Ç–∞: {error}")

        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
        log("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å...")
        success, output, error = run_remote_command(ssh_client, "systemctl restart deep-agg && sleep 2 && systemctl status deep-agg --no-pager -l")

        if success and "active (running)" in output:
            log("‚úÖ –°–µ—Ä–≤–∏—Å –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            log(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {error}")

        # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        log("üß™ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏...")
        success, output, error = run_remote_command(ssh_client, "curl -s 'http://127.0.0.1:9201/api/search?q=LM317T' | head -50")

        if success and "LM317T" in output:
            log("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
        else:
            log("‚ùå API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")

    except Exception as e:
        log(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
    finally:
        ssh_client.close()

    log("‚úÖ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    log("üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É: http://89.104.69.77/")

if __name__ == "__main__":
    main()
