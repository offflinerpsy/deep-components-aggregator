#!/bin/bash

# scripts/deploy-and-test.sh - –¥–µ–ø–ª–æ–π –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/deploy-and-test.sh [server_ip] [password]

SERVER_IP=${1:-"95.217.134.12"}
SERVER_PATH="/opt/deep-agg"
LOCAL_PATH="."

echo "üöÄ Deploying to Ubuntu server: $SERVER_IP"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
run_remote() {
    local cmd="$1"
    echo "üì° Remote: $cmd"
    sshpass -p "$2" ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no root@$SERVER_IP "$cmd"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
copy_files() {
    echo "üì¶ Copying files to server..."
    sshpass -p "$2" scp -o ConnectTimeout=10 -r \
        server.js package.json src/ adapters/ public/ lib/ \
        root@$SERVER_IP:$SERVER_PATH/
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ sshpass
if ! command -v sshpass &> /dev/null; then
    echo "‚ùå sshpass not found. Installing..."
    if command -v apt-get &> /dev/null; then
        sudo apt-get update && sudo apt-get install -y sshpass
    elif command -v yum &> /dev/null; then
        sudo yum install -y sshpass
    else
        echo "‚ùå Cannot install sshpass automatically. Please install it manually."
        exit 1
    fi
fi

# –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω
if [ -z "$2" ]; then
    echo -n "üîë Enter server password: "
    read -s SERVER_PASSWORD
    echo
else
    SERVER_PASSWORD="$2"
fi

# 1. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
echo "üõë Stopping old processes..."
run_remote "pkill -f 'node server.js' || true" "$SERVER_PASSWORD"
run_remote "pkill -f 'npm start' || true" "$SERVER_PASSWORD"

# 2. –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
echo "üìÅ Ensuring directory exists..."
run_remote "mkdir -p $SERVER_PATH" "$SERVER_PASSWORD"

# 3. –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
copy_files "$SERVER_PASSWORD"

# 4. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ Installing dependencies..."
run_remote "cd $SERVER_PATH && npm install --production" "$SERVER_PASSWORD"

# 5. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ
echo "üöÄ Starting server..."
run_remote "cd $SERVER_PATH && nohup node server.js > server.log 2>&1 &" "$SERVER_PASSWORD"

# 6. –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ Waiting for server to start..."
sleep 5

# 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º API
echo "üß™ Testing API..."
API_RESPONSE=$(run_remote "curl -s 'http://127.0.0.1:9201/api/search?q=LM317' | jq '.count' 2>/dev/null || echo 'error'" "$SERVER_PASSWORD")

if [ "$API_RESPONSE" != "error" ] && [ "$API_RESPONSE" -gt 0 ]; then
    echo "‚úÖ API test passed: $API_RESPONSE results found"
else
    echo "‚ùå API test failed"
    run_remote "cd $SERVER_PATH && tail -20 server.log" "$SERVER_PASSWORD"
    exit 1
fi

# 8. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
echo "üè† Testing homepage..."
HOMEPAGE_TEST=$(run_remote "curl -s 'http://127.0.0.1:9201/' | grep -c 'DeepAgg' || echo '0'" "$SERVER_PASSWORD")

if [ "$HOMEPAGE_TEST" -gt 0 ]; then
    echo "‚úÖ Homepage test passed"
else
    echo "‚ùå Homepage test failed"
fi

# 9. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–∞
echo "üìä Server status:"
run_remote "ps aux | grep 'node server.js' | grep -v grep || echo 'No server process found'" "$SERVER_PASSWORD"

# 10. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏
echo "üìã Recent logs:"
run_remote "cd $SERVER_PATH && tail -10 server.log" "$SERVER_PASSWORD"

echo "üéâ Deployment completed!"
echo "üåê Server URL: http://$SERVER_IP:9201/"
echo "üìä API URL: http://$SERVER_IP:9201/api/search?q=LM317"
