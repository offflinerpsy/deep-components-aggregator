#!/usr/bin/env python3
# sync_all_repos.py - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
import subprocess
from datetime import datetime

def log(msg):
    timestamp = datetime.now().strftime("%H:%M:%S")
    print(f"[{timestamp}] {msg}")

def run_command(command):
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True, cwd=".")
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def main():
    log("üîÑ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –í–°–ï–• –†–ï–ü–û–ó–ò–¢–û–†–ò–ï–í")
    
    # 1. –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    log("üìù –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è...")
    success, output, error = run_command("git add .")
    if success:
        log("‚úÖ –§–∞–π–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã")
    else:
        log(f"‚ùå –û—à–∏–±–∫–∞ git add: {error}")
        return
    
    # 2. –ö–æ–º–º–∏—Ç–∏–º
    commit_msg = f"fix: –ø–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ ({datetime.now().strftime('%Y-%m-%d %H:%M')})"
    success, output, error = run_command(f'git commit -m "{commit_msg}"')
    if success:
        log("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã")
    else:
        log(f"‚ö†Ô∏è –ö–æ–º–º–∏—Ç: {error}")
    
    # 3. –ü—É—à–∏–º –≤ origin (GitHub)
    log("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ GitHub...")
    success, output, error = run_command("git push origin main")
    if success:
        log("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub")
    else:
        log(f"‚ùå –û—à–∏–±–∫–∞ push –≤ GitHub: {error}")
        return
    
    # 4. –ü—É—à–∏–º –≤ prod (–æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä)
    log("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ prod —Å–µ—Ä–≤–µ—Ä...")
    success, output, error = run_command("git push prod main")
    if success:
        log("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ prod")
    else:
        log(f"‚ùå –û—à–∏–±–∫–∞ push –Ω–∞ prod: {error}")
    
    # 5. –ü—É—à–∏–º –≤ diag (–¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä)
    log("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ diag —Å–µ—Ä–≤–µ—Ä...")
    success, output, error = run_command("git push diag main")
    if success:
        log("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ diag")
    else:
        log(f"‚ùå –û—à–∏–±–∫–∞ push –Ω–∞ diag: {error}")
    
    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å...")
    success, output, error = run_command("git status")
    if success:
        log("=== GIT STATUS ===")
        print(output)
    
    # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º remote
    success, output, error = run_command("git remote -v")
    if success:
        log("=== REMOTE REPOS ===")
        print(output)
    
    log("‚úÖ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    log("")
    log("üåê –ü–†–û–í–ï–†–¨–¢–ï:")
    log("   ‚Ä¢ GitHub: https://github.com/offflinerpsy/deep-components-aggregator")
    log("   ‚Ä¢ Prod: http://89.104.69.77/")
    log("   ‚Ä¢ Diag: –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ")

if __name__ == "__main__":
    main()
