#!/usr/bin/env python3
# sync_with_github.py - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å GitHub
import paramiko
import subprocess
import os
from datetime import datetime

SERVER = "89.104.69.77"
USERNAME = "root"
PASSWORD = "DCIIcWfISxT3R4hT"

def log(msg):
    timestamp = datetime.now().strftime("%H:%M:%S")
    print(f"[{timestamp}] {msg}")

def run_local_command(command):
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True, cwd=".")
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def create_ssh_client():
    try:
        ssh_client = paramiko.SSHClient()
        ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh_client.connect(SERVER, username=USERNAME, password=PASSWORD, timeout=30)
        return ssh_client
    except Exception as e:
        log(f"‚ùå SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å: {e}")
        return None

def run_remote_command(ssh_client, command, timeout=120):
    try:
        stdin, stdout, stderr = ssh_client.exec_command(command, timeout=timeout)
        output = stdout.read().decode('utf-8', errors='ignore')
        error = stderr.read().decode('utf-8', errors='ignore')
        exit_code = stdout.channel.recv_exit_status()
        return exit_code == 0, output, error
    except Exception as e:
        log(f"‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: {e}")
        return False, "", str(e)

def main():
    log("üîÑ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –° GITHUB")
    
    # 1. –õ–û–ö–ê–õ–¨–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø
    log("üì§ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    success, output, error = run_local_command("git add .")
    if success:
        log("‚úÖ –§–∞–π–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ git")
    else:
        log(f"‚ùå –û—à–∏–±–∫–∞ git add: {error}")
    
    # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    commit_msg = f"feat: –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï - –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∏–π —Å–∞–π—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ ({datetime.now().strftime('%Y-%m-%d %H:%M')})"
    success, output, error = run_local_command(f'git commit -m "{commit_msg}"')
    if success:
        log("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã")
    else:
        log(f"‚ö†Ô∏è –ö–æ–º–º–∏—Ç: {error}")  # –ú–æ–∂–µ—Ç –±—ã—Ç—å "nothing to commit"
    
    # –ü—É—à–∏–º –Ω–∞ GitHub
    success, output, error = run_local_command("git push origin main")
    if success:
        log("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ GitHub")
    else:
        log(f"‚ùå –û—à–∏–±–∫–∞ push: {error}")
    
    # 2. –£–î–ê–õ–ï–ù–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø
    log("üì• –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä...")
    
    ssh_client = create_ssh_client()
    if not ssh_client:
        return
    
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        success, output, error = run_remote_command(ssh_client, """
cd /opt/deep-agg
git pull origin main || echo "Git pull –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º wget..."

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - —Å–∫–∞—á–∏–≤–∞–µ–º —Å–≤–µ–∂—É—é –≤–µ—Ä—Å–∏—é
cd /tmp
rm -rf project.zip deep-components-aggregator-main
wget -q https://github.com/offflinerpsy/deep-components-aggregator/archive/refs/heads/main.zip -O project.zip
unzip -q project.zip

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
cp /opt/deep-agg/public/ui/search.html /tmp/search-backup.html
cp /opt/deep-agg/public/ui/product.html /tmp/product-backup.html
cp /opt/deep-agg/public/index.html /tmp/index-backup.html
cp /opt/deep-agg/src/services/content-orchestrator.js /tmp/orchestrator-backup.js

# –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç
rm -rf /opt/deep-agg
mkdir -p /opt/deep-agg
cp -r deep-components-aggregator-main/* /opt/deep-agg/

# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
cp /tmp/search-backup.html /opt/deep-agg/public/ui/search.html
cp /tmp/product-backup.html /opt/deep-agg/public/ui/product.html
cp /tmp/index-backup.html /opt/deep-agg/public/index.html
cp /tmp/orchestrator-backup.js /opt/deep-agg/src/services/content-orchestrator.js

echo "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
""")
        
        if success:
            log("‚úÖ –ö–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –æ–±–Ω–æ–≤–ª–µ–Ω")
        else:
            log(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {error}")
        
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
        log("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å...")
        success, output, error = run_remote_command(ssh_client, "systemctl restart deep-agg && sleep 2 && systemctl status deep-agg --no-pager -l")
        
        if success and "active (running)" in output:
            log("‚úÖ –°–µ—Ä–≤–∏—Å –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            log(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {error}")
            
        # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        log("üß™ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏...")
        success, output, error = run_remote_command(ssh_client, "curl -s 'http://127.0.0.1:9201/api/search?q=LM317T' | head -50")
        
        if success and "LM317T" in output and "image" in output:
            log("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
        else:
            log("‚ùå API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
            
    except Exception as e:
        log(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
    finally:
        ssh_client.close()
    
    log("‚úÖ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    log("üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É: http://89.104.69.77/")

if __name__ == "__main__":
    main()
