#!/usr/bin/env python3
# sync_with_scp.py - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ SCP
import paramiko
import subprocess
import os
from datetime import datetime
import tempfile
import shutil

SERVER = "89.104.69.77"
USERNAME = "root"
PASSWORD = "DCIIcWfISxT3R4hT"

def log(msg):
    timestamp = datetime.now().strftime("%H:%M:%S")
    print(f"[{timestamp}] {msg}")

def run_local_command(command):
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True, cwd=".")
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def create_ssh_client():
    try:
        ssh_client = paramiko.SSHClient()
        ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh_client.connect(SERVER, username=USERNAME, password=PASSWORD, timeout=30)
        return ssh_client
    except Exception as e:
        log(f"‚ùå SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å: {e}")
        return None

def run_remote_command(ssh_client, command, timeout=120):
    try:
        stdin, stdout, stderr = ssh_client.exec_command(command, timeout=timeout)
        output = stdout.read().decode('utf-8', errors='ignore')
        error = stderr.read().decode('utf-8', errors='ignore')
        exit_code = stdout.channel.recv_exit_status()
        return exit_code == 0, output, error
    except Exception as e:
        log(f"‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: {e}")
        return False, "", str(e)

def main():
    log("üîÑ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ß–ï–†–ï–ó SCP")
    
    # 1. –õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    log("üìù –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è...")
    success, output, error = run_local_command("git add .")
    if success:
        log("‚úÖ –§–∞–π–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã")
    else:
        log(f"‚ùå –û—à–∏–±–∫–∞ git add: {error}")
        return
    
    # 2. –ö–æ–º–º–∏—Ç
    commit_msg = f"fix: —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ SCP ({datetime.now().strftime('%Y-%m-%d %H:%M')})"
    success, output, error = run_local_command(f'git commit -m "{commit_msg}"')
    if success:
        log("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã")
    else:
        log(f"‚ö†Ô∏è –ö–æ–º–º–∏—Ç: {error}")
    
    # 3. Push –≤ GitHub
    log("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ GitHub...")
    success, output, error = run_local_command("git push origin main")
    if success:
        log("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub")
    else:
        log(f"‚ùå –û—à–∏–±–∫–∞ push –≤ GitHub: {error}")
        return
    
    # 4. –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤
    log("üì¶ –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –ø—Ä–æ–µ–∫—Ç–∞...")
    temp_dir = tempfile.mkdtemp()
    archive_path = os.path.join(temp_dir, "project.tar.gz")
    
    try:
        success, output, error = run_local_command(f"git archive main -o {archive_path}")
        if success:
            log("‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω")
        else:
            log(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞: {error}")
            return
        
        # 5. –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É
        log("üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É...")
        ssh_client = create_ssh_client()
        if not ssh_client:
            return
        
        try:
            # 6. –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
            log("üìÅ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...")
            run_remote_command(ssh_client, "mkdir -p /opt/deep-agg /opt/deep-agg-diag")
            
            # 7. –ö–æ–ø–∏—Ä—É–µ–º –∞—Ä—Ö–∏–≤
            log("üì§ –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä...")
            sftp = ssh_client.open_sftp()
            sftp.put(archive_path, "/tmp/project.tar.gz")
            sftp.close()
            
            # 8. –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤
            log("üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤...")
            run_remote_command(ssh_client, """
cd /opt/deep-agg
tar xzf /tmp/project.tar.gz --strip-components=1
rm /tmp/project.tar.gz

cd /opt/deep-agg-diag
cp -r /opt/deep-agg/* .
""")
            
            # 9. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
            log("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
            run_remote_command(ssh_client, """
cd /opt/deep-agg
npm install --production
""")
            
            # 10. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
            log("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å...")
            run_remote_command(ssh_client, "systemctl restart deep-agg")
            
            # 11. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞...")
            success, output, error = run_remote_command(ssh_client, "systemctl status deep-agg --no-pager -l")
            if success and "active (running)" in output:
                log("‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç")
            else:
                log("‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
            # 12. –ü—Ä–æ–≤–µ—Ä—è–µ–º API
            log("üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º API...")
            success, output, error = run_remote_command(ssh_client, "curl -s 'http://127.0.0.1:9201/api/search?q=LM317T' | head -50")
            if success and "LM317T" in output:
                log("‚úÖ API –æ—Ç–≤–µ—á–∞–µ—Ç")
            else:
                log("‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
            
        except Exception as e:
            log(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
        finally:
            ssh_client.close()
            
    finally:
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        shutil.rmtree(temp_dir, ignore_errors=True)
    
    log("‚úÖ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    log("")
    log("üåê –ü–†–û–í–ï–†–¨–¢–ï:")
    log("   ‚Ä¢ GitHub: https://github.com/offflinerpsy/deep-components-aggregator")
    log("   ‚Ä¢ Prod: http://89.104.69.77/")
    log("   ‚Ä¢ Diag: –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ")

if __name__ == "__main__":
    main()
