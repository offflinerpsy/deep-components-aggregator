"""
–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ LM317 - –ø—Ä–æ–≤–µ—Ä—è—é –í–°–Å —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
"""
from playwright.sync_api import sync_playwright
import time

def test_search():
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=True)
        page = browser.new_page()
        
        print("üîç –û—Ç–∫—Ä—ã–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞...")
        page.goto('http://5.129.228.88:9201/search.html?q=LM317', timeout=15000)
        
        # –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏
        time.sleep(3)
        
        # –ü—Ä–æ–≤–µ—Ä—è—é title
        title = page.title()
        print(f"üìÑ Title: {title}")
        
        # –ü—Ä–æ–≤–µ—Ä—è—é summary
        summary = page.locator('#results-summary').text_content()
        print(f"üìä Summary: {summary}")
        
        # –ü—Ä–æ–≤–µ—Ä—è—é tbody
        tbody = page.locator('#results-tbody')
        rows = tbody.locator('tr').count()
        print(f"üìã Rows in table: {rows}")
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∏ - –≤—ã–≤–µ–¥—É –ø–µ—Ä–≤—É—é
        if rows > 0:
            first_row = tbody.locator('tr').first
            mpn = first_row.locator('td').nth(1).text_content()
            manufacturer = first_row.locator('td').nth(2).text_content()
            price = first_row.locator('td').nth(8).text_content()
            print(f"‚úÖ –ü–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {mpn} –æ—Ç {manufacturer}, —Ü–µ–Ω–∞: {price}")
        else:
            print("‚ùå –ù–ï–¢ –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –í –¢–ê–ë–õ–ò–¶–ï!")
            
            # –ü—Ä–æ–≤–µ—Ä—è—é console errors
            print("\nüîç –ü—Ä–æ–≤–µ—Ä—è—é Console Errors:")
            page.on("console", lambda msg: print(f"  CONSOLE {msg.type}: {msg.text}"))
            page.on("pageerror", lambda exc: print(f"  PAGE ERROR: {exc}"))
            
            # –ü—Ä–æ–≤–µ—Ä—è—é —á—Ç–æ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
            print("\nüîç –ü—Ä–æ–≤–µ—Ä—è—é –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:")
            page.on("response", lambda response: 
                print(f"  {response.status} {response.url}") if 'search' in response.url or 'api' in response.url else None
            )
            
            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é —á—Ç–æ–±—ã –ø–æ–π–º–∞—Ç—å –æ—à–∏–±–∫–∏
            page.reload(wait_until='networkidle')
            time.sleep(2)
            
            # –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—é
            rows_after = tbody.locator('tr').count()
            summary_after = page.locator('#results-summary').text_content()
            print(f"\nüìä –ü–æ—Å–ª–µ reload: summary='{summary_after}', rows={rows_after}")
        
        # Screenshot –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        page.screenshot(path='search_test.png')
        print("\nüì∏ Screenshot —Å–æ—Ö—Ä–∞–Ω—ë–Ω: search_test.png")
        
        browser.close()
        
        return rows > 0

if __name__ == '__main__':
    success = test_search()
    print(f"\n{'‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù' if success else '‚ùå –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù'}")
    exit(0 if success else 1)
