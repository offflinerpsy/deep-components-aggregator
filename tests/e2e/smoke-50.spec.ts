import { test, expect } from '@playwright/test';

const MPNs = [
  // –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
  'LM317T','1N4148W-TP','NE555P','BC547B','TL072','TL071CP','LM358P','CD4017BE','74HC595','ATMEGA328P',
  'STM32F103C8T6','AMS1117','IRFZ44N','IRLZ44N','BC337','2N2222','AD620','L7805CV','MC34063A','SS14',
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
  'LM324','LM358','LM386','TL074','TL084','LM741','LM358N','LM324N','LM386N','TL074CN',
  'CD4060','CD4040','CD4013','CD4017','CD4020','CD4024','CD4046','CD4051','CD4066','CD4071',
  '74LS00','74LS02','74LS04','74LS08','74LS10','74LS11','74LS14','74LS20','74LS21','74LS27',
  '74LS30','74LS32','74LS86','74LS125','74LS126','74LS138','74LS139','74LS151','74LS153','74LS157'
];

let successCount = 0;
let totalCount = 0;

for (const mpn of MPNs) {
  test(`Smoke ${mpn}: –ø–æ–∏—Å–∫ ‚Üí –∫–∞—Ä—Ç–æ—á–∫–∞ –±–µ–∑ –∫—Ä–∞—Å–Ω—ã—Ö —Ñ–ª–∞–≥–æ–≤`, async ({ page }) => {
    totalCount++;
    
    // –ü–æ–∏—Å–∫
    await page.goto(`/?q=${encodeURIComponent(mpn)}`);

    // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ sum —Å–æ–¥–µ—Ä–∂–∏—Ç "–ù–∞–π–¥–µ–Ω–æ:"
    await page.waitForFunction(() => {
      const sumEl = document.getElementById('sum');
      return sumEl && sumEl.textContent && sumEl.textContent.includes('–ù–∞–π–¥–µ–Ω–æ:');
    }, { timeout: 30000 });

    // –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
    const table = page.locator('table tbody tr');
    const rowCount = await table.count();
    
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    const sumText = await page.locator('#sum').textContent();
    console.log(`üîç ${mpn}: sum="${sumText}", rows=${rowCount}`);
    
    if (rowCount === 0) {
      console.log(`‚ùå ${mpn}: –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ (sum: ${sumText})`);
      return;
    }

    // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é —Å—Å—ã–ª–∫—É "Open" –∏–ª–∏ –∫–ª–∏–∫–∞–µ–º –ø–æ –ø–µ—Ä–≤–æ–º—É MPN
    const firstLink = page.locator('a', { hasText: /open/i }).first();
    if (await firstLink.count() > 0) {
      await firstLink.click();
    } else {
      // fallback: –ø—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥
      await page.goto(`/product?mpn=${encodeURIComponent(mpn)}`);
    }

    // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç–æ—á–∫–∏
    await page.waitForSelector('[data-testid="product-root"]', { timeout: 10000 });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–∞—Ä—Ç–æ—á–∫–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
    const productRoot = page.getByTestId('product-root');
    await expect(productRoot).toBeVisible();

    // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    await page.waitForFunction(() => {
      const titleEl = document.querySelector('[data-testid="title"]');
      return titleEl && titleEl.textContent && titleEl.textContent.trim() !== '';
    }, { timeout: 10000 });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    const title = page.getByTestId('title');
    const titleText = await title.textContent();
    
    if (!titleText || titleText.trim() === '') {
      console.log(`‚ùå ${mpn}: –ü—É—Å—Ç–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫`);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ü–µ–Ω—ã –≤ —Ä—É–±–ª—è—Ö (–º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫—Ä—ã—Ç–∞ –¥–ª—è fallback –¥–∞–Ω–Ω—ã—Ö)
    const minPrice = page.locator('#minPrice');
    const priceText = await minPrice.textContent();
    
    if (!priceText || priceText.trim() === '') {
      console.log(`‚ö†Ô∏è ${mpn}: –¶–µ–Ω–∞ —Å–∫—Ä—ã—Ç–∞ (–≤–æ–∑–º–æ–∂–Ω–æ fallback –¥–∞–Ω–Ω—ã–µ)`);
      // –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–µ—Å—Ç
    } else {
      console.log(`‚úÖ ${mpn}: –¶–µ–Ω–∞ –Ω–∞–π–¥–µ–Ω–∞: ${priceText}`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ç–æ–∫–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫—Ä—ã—Ç –µ—Å–ª–∏ stock_total = 0)
    const stock = page.locator('#stock');
    const stockText = await stock.textContent();
    
    // –ï—Å–ª–∏ —Å—Ç–æ–∫ —Å–∫—Ä—ã—Ç, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
    if (!stockText || stockText.trim() === '') {
      console.log(`‚ö†Ô∏è ${mpn}: –°—Ç–æ–∫ —Å–∫—Ä—ã—Ç (–≤–æ–∑–º–æ–∂–Ω–æ stock_total = 0)`);
      // –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–µ—Å—Ç
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–µ—Ç –∫–æ–Ω—Å–æ–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫
    const errors: string[] = [];
    page.on('console', (msg) => { 
      if (msg.type() === 'error') errors.push(msg.text());
    });
    
    await page.waitForTimeout(1000);
    
    if (errors.length > 0) {
      console.log(`‚ùå ${mpn}: –ö–æ–Ω—Å–æ–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏: ${errors.join(', ')}`);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è (RU –∏–ª–∏ EN –∫–æ–Ω—Ç–µ–Ω—Ç)
    const desc = page.getByTestId('desc');
    const descText = await desc.textContent();
    
    if (!descText || descText.trim() === '') {
      console.log(`‚ö†Ô∏è ${mpn}: –û–ø–∏—Å–∞–Ω–∏–µ –ø—É—Å—Ç–æ–µ`);
      // –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–µ—Å—Ç
    } else {
      console.log(`‚úÖ ${mpn}: –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ`);
    }

    console.log(`‚úÖ ${mpn}: –£—Å–ø–µ—à–Ω–æ`);
    successCount++;
  });
}

// –¢–µ—Å—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
test('Smoke results: save summary', async ({ page }) => {
  const successRate = (successCount / totalCount) * 100;
  
  console.log(`\nüìä Smoke-50 Results:`);
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ: ${successCount}/${totalCount} (${successRate.toFixed(1)}%)`);
  console.log(`‚ùå –ù–µ—É–¥–∞—á–Ω–æ: ${totalCount - successCount}/${totalCount}`);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª
  const results = {
    total: totalCount,
    success: successCount,
    failed: totalCount - successCount,
    successRate: successRate,
    timestamp: new Date().toISOString()
  };
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É—Å–ø–µ—à–Ω–æ—Å—Ç—å >= 80%
  expect(successRate).toBeGreaterThanOrEqual(80);
  
  console.log(`\nüéØ Smoke-50: ${successRate >= 80 ? 'PASS' : 'FAIL'} (—Ç—Ä–µ–±—É–µ—Ç—Å—è ‚â•80%)`);
});