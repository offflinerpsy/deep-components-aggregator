// ui/product.js - –õ–æ–≥–∏–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∞ —Å data-testid –∏ –±–µ–∑ try/catch
const $ = (selector) => document.querySelector(selector);
const $$ = (selector) => document.querySelectorAll(selector);

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL
const getUrlParams = () => {
  const params = new URLSearchParams(window.location.search);
  return {
    mpn: params.get('mpn')?.trim() || ''
  };
};

// –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
const nz = (value) => {
  if (value === null || value === undefined || value === '') return '‚Äî';
  return String(value).trim();
};

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
const fmtRub = (price) => {
  if (!price || price <= 0) return '‚Äî ‚ÇΩ';
  return new Intl.NumberFormat('ru-RU', {
    style: 'currency',
    currency: 'RUB',
    maximumFractionDigits: 2
  }).format(price);
};

// –°–∫—Ä—ã—Ç–∏–µ/–ø–æ–∫–∞–∑ —Å–µ–∫—Ü–∏–π
const hideSection = (selector) => {
  const element = $(selector);
  if (element) element.classList.add('hidden');
};

const showSection = (selector) => {
  const element = $(selector);
  if (element) element.classList.remove('hidden');
};

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
const setText = (selector, text) => {
  const element = $(selector);
  if (element) {
    element.textContent = nz(text);
    return true;
  }
  return false;
};

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ HTML —ç–ª–µ–º–µ–Ω—Ç–∞
const setHTML = (selector, html) => {
  const element = $(selector);
  if (element) {
    element.innerHTML = html || '';
    return true;
  }
  return false;
};

// –°–æ–∑–¥–∞–Ω–∏–µ –±–µ–π–¥–∂–µ–π –¥–ª—è —Ä–µ–≥–∏–æ–Ω–æ–≤
const createRegionBadges = (regions) => {
  if (!Array.isArray(regions) || regions.length === 0) return '';
  return regions.map(region => `<span class="badge">${region}</span>`).join('');
};

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
const loadImages = (images) => {
  const mainImage = $('#main-image');
  const thumbsContainer = $('#image-thumbs');
  
  if (!Array.isArray(images) || images.length === 0) {
    if (mainImage) {
      mainImage.src = '/ui/placeholder.svg';
      mainImage.alt = '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ';
    }
    if (thumbsContainer) thumbsContainer.innerHTML = '';
    return;
  }
  
  // –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  if (mainImage) {
    mainImage.src = images[0];
    mainImage.alt = '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞';
    mainImage.onerror = () => {
      mainImage.onerror = null;
      mainImage.src = '/ui/placeholder.svg';
    };
  }
  
  // –ú–∏–Ω–∏–∞—Ç—é—Ä—ã (–µ—Å–ª–∏ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
  if (thumbsContainer && images.length > 1) {
    const thumbsHTML = images.slice(1).map(src => 
      `<img src="${src}" loading="lazy" onclick="document.getElementById('main-image').src='${src}'">`
    ).join('');
    thumbsContainer.innerHTML = thumbsHTML;
  }
};

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
const loadDocumentation = (datasheets) => {
  const docsList = $('#docs-list');
  const galleryDocs = $('#gallery-docs');
  
  if (!Array.isArray(datasheets) || datasheets.length === 0) {
    if (docsList) docsList.innerHTML = '<p style="color:#6b7280;">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>';
    if (galleryDocs) galleryDocs.innerHTML = '';
    hideSection('[data-testid="docs"]');
    return;
  }
  
  // –û—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
  if (docsList) {
    const docsHTML = datasheets.map((url, index) => 
      `<a href="${url}" target="_blank" rel="noopener">üìÑ Datasheet ${index + 1}</a>`
    ).join('');
    docsList.innerHTML = docsHTML;
  }
  
  // –ö—Ä–∞—Ç–∫–∏–π —Å–ø–∏—Å–æ–∫ –≤ –≥–∞–ª–µ—Ä–µ–µ (–ø–µ—Ä–≤—ã–µ 3)
  if (galleryDocs) {
    const shortDocsHTML = datasheets.slice(0, 3).map((url, index) => 
      `<a href="${url}" target="_blank" rel="noopener">PDF ${index + 1}</a>`
    ).join('');
    galleryDocs.innerHTML = shortDocsHTML;
  }
  
  showSection('[data-testid="docs"]');
};

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
const loadTechnicalSpecs = (specs) => {
  const specsTBody = $('#specs-tbody');
  
  if (!specs || typeof specs !== 'object' || Object.keys(specs).length === 0) {
    if (specsTBody) {
      specsTBody.innerHTML = '<tr><td colspan="2" style="text-align:center;padding:24px;color:#6b7280;">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</td></tr>';
    }
    hideSection('[data-testid="specs"]');
    return;
  }
  
  if (specsTBody) {
    const specsHTML = Object.entries(specs).map(([key, value]) => 
      `<tr><td>${key}</td><td>${nz(value)}</td></tr>`
    ).join('');
    specsTBody.innerHTML = specsHTML;
  }
  
  showSection('[data-testid="specs"]');
};

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞
const loadProductData = async (mpn) => {
  if (!mpn) {
    setText('#product-title', 'MPN –Ω–µ —É–∫–∞–∑–∞–Ω');
    return;
  }
  
  setText('#product-title', `${mpn} ‚Äî –∑–∞–≥—Ä—É–∑–∫–∞...`);
  
  const response = await fetch(`/api/product?mpn=${encodeURIComponent(mpn)}`);
  
  if (!response.ok) {
    setText('#product-title', `${mpn} ‚Äî –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ (${response.status})`);
    return;
  }
  
  const contentType = response.headers.get('content-type');
  if (!contentType || !contentType.includes('application/json')) {
    setText('#product-title', `${mpn} ‚Äî –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞`);
    return;
  }
  
  const data = await response.json();
  
  if (!data.ok || !data.product) {
    setText('#product-title', `${mpn} ‚Äî –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
    return;
  }
  
  const product = data.product;
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫
  const title = product.title ? `${product.mpn} ‚Äî ${product.title}` : product.mpn;
  setText('#product-title', title);
  
  // –ú–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  setText('#meta-mpn-value', product.mpn);
  setText('#meta-manufacturer-value', product.manufacturer);
  setText('#meta-package-value', product.package);
  setText('#meta-packaging-value', product.packaging);
  
  // –ë–ª–æ–∫ –∑–∞–∫–∞–∑–∞
  const stock = (product.availability && product.availability.inStock) 
    ? product.availability.inStock 
    : 0;
  setText('#order-stock-value', stock > 0 ? stock : '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏');
  
  const minPrice = (Array.isArray(product.pricing) && product.pricing.length > 0) 
    ? product.pricing[0].price_rub 
    : 0;
  setText('#order-price-value', fmtRub(minPrice));
  
  const regionsHTML = createRegionBadges(product.regions);
  setHTML('#order-regions', regionsHTML);
  
  // –û–ø–∏—Å–∞–Ω–∏–µ
  if (product.description && product.description.trim()) {
    setHTML('#desc-content', `<p>${product.description}</p>`);
    showSection('[data-testid="desc"]');
  } else {
    setHTML('#desc-content', '<p style="color:#6b7280;">–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>');
    hideSection('[data-testid="desc"]');
  }
  
  // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  loadImages(product.images);
  
  // –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
  loadDocumentation(product.datasheets);
  
  // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
  loadTechnicalSpecs(product.technical_specs);
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const initProductPage = () => {
  const params = getUrlParams();
  
  if (!params.mpn) {
    setText('#product-title', 'MPN –Ω–µ —É–∫–∞–∑–∞–Ω –≤ URL');
    return;
  }
  
  loadProductData(params.mpn);
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫–∞–∑–∞
  const orderButton = $('[data-testid="order-button"]');
  if (orderButton) {
    orderButton.addEventListener('click', () => {
      const quantity = $('#quantity-input')?.value || 1;
      alert(`–ó–∞–∫–∞–∑: ${params.mpn}, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${quantity}\n\n–§—É–Ω–∫—Ü–∏—è –∑–∞–∫–∞–∑–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ.`);
    });
  }
};

// –ó–∞–ø—É—Å–∫ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', initProductPage);
} else {
  initProductPage();
}
